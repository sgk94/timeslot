{"version":3,"sources":["Navbar.js","ActivityList.js","NoActivities.js","Home.js","Book.js","App.js","index.js"],"names":["Navbar","className","to","id","onClick","e","console","log","ActivityList","activities","sortByDate","onSortByDateClick","map","activity","activityName","startTime","endTime","date","guests","NoActivities","Home","props","len","Book","minTime","useState","setActivityName","setActivityDate","setActivityStart","setActivityEnd","setActivityGuests","history","useHistory","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","minDate","onSubmit","preventDefault","newActivity","addActivity","push","htmlFor","value","onChange","target","type","min","placeholder","required","max","defaultValue","App","setActivities","length","useEffect","exact","path","sortedActivities","sort","a1","a2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAoBeA,EAlBA,WAOb,OACE,sBAAKC,UAAU,SAAf,UACE,8CACA,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,GAAG,QAAQE,QAThB,SAACC,GACnBC,QAAQC,IAAI,iBAQR,6BC0BOC,EAxCM,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAOjC,OACE,sBAAKT,UAAU,eAAf,UACE,gCACE,oBAAIE,GAAG,oBAAP,2BACA,wBAAQA,GAAG,mBAAmBC,QAAS,kBARnB,SAACK,GACzBC,EAAWD,GAOqCE,CAAkBF,IAA9D,6BAEF,wBAAOR,UAAU,QAAjB,UACE,gCACE,+BACE,0CACA,4CACA,0CACA,sCACA,+CAGJ,gCACGQ,EAAWG,KAAI,SAACC,GAAD,OACd,qBAAIZ,UAAU,cAAd,UACI,oBAAIA,UAAU,mBAAd,SAAmCY,EAASC,eAE5C,oBAAIb,UAAU,mBAAd,SAAmCY,EAASE,YAC5C,oBAAId,UAAU,mBAAd,SAAmCY,EAASG,UAC5C,oBAAIf,UAAU,mBAAd,SAAmCY,EAASI,OAC5C,oBAAIhB,UAAU,mBAAd,SAAmCY,EAASK,WANfL,EAASV,gBCjBvCgB,EARM,WACnB,OACE,qBAAKlB,UAAU,eAAf,SACE,uFCYSmB,EAZF,SAACC,GAEZ,OACE,qBAAKpB,UAAU,OAAf,SACGoB,EAAMC,IAAM,EACX,cAAC,EAAD,CAAcb,WAAYY,EAAMZ,WAAYC,WAAYW,EAAMX,aAC9D,cAAC,EAAD,O,OCwFOa,EA9FF,SAACF,GAGZ,IAYIG,EAZJ,EAAwCC,mBAAS,mBAAjD,mBAAOX,EAAP,KAAqBY,EAArB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOR,EAAP,KAAaU,EAAb,KACA,EAAsCF,mBAAS,IAA/C,mBAAOV,EAAP,KAAkBa,EAAlB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOT,EAAP,KAAgBa,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOP,EAAP,KAAeY,EAAf,KAEIC,EAAUC,cAGV7B,EAAKkB,EAAMC,IAIG,OAAdP,IACFS,EAAUT,GAIZ,IAAIkB,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cAEbC,EADJV,EAAQQ,EAAO,IAAMF,EAAK,IAAMJ,EAWhC,OACE,sBAAKlC,UAAU,OAAf,UACE,qDACA,uBAAM2C,SAVW,SAACvC,GACpBA,EAAEwC,iBACF,IAAMC,EAAc,CAAChC,eAAcG,OAAMF,YAAWC,UAASE,SAAQf,MACrEkB,EAAM0B,YAAYD,GAClBf,EAAQiB,KAAK,MAMX,UACE,uBAAOC,QAAQ,aAAf,iCACA,yBAAQhD,UAAU,SAASiD,MAAOpC,EAAcqC,SAAU,SAAC9C,GAAD,OAAMqB,EAAgBrB,EAAE+C,OAAOF,QAAzF,UACE,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,kBAAd,gCAEF,0CACA,uBACEjD,UAAU,SACVoD,KAAK,OACLC,IAAKX,EACLY,YAAY,aACZL,MAAOjC,EACPkC,SAAU,SAAC9C,GAAD,OAAOsB,EAAgBtB,EAAE+C,OAAOF,QAC1CM,UAAQ,IAEV,gDACA,uBACEvD,UAAU,SACVoD,KAAK,OACLH,MAAOnC,EACPoC,SAAU,SAAC9C,GAAD,OAAOuB,EAAiBvB,EAAE+C,OAAOF,QAC3CM,UAAQ,IAEV,8CACA,uBACEvD,UAAU,SACVoD,KAAK,OACLC,IAAK9B,EACLiC,IAAI,QACJP,MAAOlC,EACPmC,SAAU,SAAC9C,GAAD,OAAOwB,EAAexB,EAAE+C,OAAOF,QACzCM,UAAQ,IAEV,4CACA,uBACEvD,UAAU,SACVoD,KAAK,SACLC,IAAM,IACNG,IAAM,IACNP,MAAOhC,EACPiC,SAAU,SAAC9C,GAAD,OAAOyB,EAAkBzB,EAAE+C,OAAOF,QAC5CM,UAAQ,IAGV,uBACEH,KAAK,SACLK,aAAcvD,IAEhB,qDC1COwD,MA3Cf,WAGE,MAAoClC,mBAAS,IAA7C,mBAAOhB,EAAP,KAAmBmD,EAAnB,KAeItC,EAAMb,EAAWoD,OAMrB,OAHAC,qBAAU,cACP,CAACrD,IAGF,cAAC,IAAD,UACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMvD,WAAYA,EAAYa,IAAKA,EAAKZ,WAzBjC,SAACD,GAClB,IAAIwD,EAAmBxD,EAAWyD,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGlD,KAAOmD,EAAGnD,KAAQ,EAAKkD,EAAGlD,KAAOmD,EAAGnD,MAAS,EAAI,KACxG2C,EAAc,YAAIK,IAClB3D,QAAQC,IAAI0D,QAwBJ,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,cAAC,EAAD,CAAMvD,WAAYA,EAAYsC,YArBtB,SAACD,GACnBc,EAAc,GAAD,mBAAKnD,GAAL,CAAiBqC,MAoBoCxB,IAAKA,iBCnC3E+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a23c0ad3.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n  //Handle the navbar book now button\r\n  const handleClick = (e) => {\r\n    console.log('booking time');\r\n  }\r\n\r\n  return ( \r\n    <nav className=\"navbar\">\r\n      <h1>Game & Beats</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link id=\"bookNow\" to=\"/book\" onClick={handleClick}>Book Now</Link>\r\n      </div>\r\n    </nav>\r\n   );\r\n}\r\n \r\nexport default Navbar;","const ActivityList = ({activities, sortByDate}) => {\r\n\r\n  //Handle the click of the sort by date button and trigger the sort function\r\n  const onSortByDateClick = (activities) => {\r\n    sortByDate(activities);\r\n  }\r\n\r\n  return ( \r\n    <div className=\"activityFeed\">\r\n      <div>\r\n        <h2 id=\"activityFeedTitle\">Activity Feed</h2>\r\n        <button id=\"filterDateButton\" onClick={()=> onSortByDateClick(activities)}>Sort By Date</button>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Activity</th>\r\n            <th>Start Time</th>\r\n            <th>End Time</th>\r\n            <th>Date</th>\r\n            <th>Guest(s)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {activities.map((activity)=> (\r\n            <tr className=\"activityRow\" key={activity.id}>\r\n                <td className=\"activityFeedItem\">{ activity.activityName }</td>\r\n                {/* <td>{ activity.id }</td> */}\r\n                <td className=\"activityFeedItem\">{ activity.startTime }</td>\r\n                <td className=\"activityFeedItem\">{ activity.endTime }</td>\r\n                <td className=\"activityFeedItem\">{ activity.date }</td>\r\n                <td className=\"activityFeedItem\">{ activity.guests }</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ActivityList;","const NoActivities = () => {\r\n  return ( \r\n    <div className=\"activityFeed\">\r\n      <h3>You currently do not have any activities scheduled</h3>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default NoActivities;","import ActivityList from \"./ActivityList\";\r\nimport NoActivities from \"./NoActivities\";\r\n\r\nconst Home = (props) => {\r\n  \r\n  return ( \r\n    <div className=\"home\">\r\n      {props.len > 0 \r\n      ? <ActivityList activities={props.activities} sortByDate={props.sortByDate}/>\r\n      : <NoActivities />  \r\n    }\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Home;","import { useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Book = (props) => {\r\n  \r\n  //state of input values\r\n  const [activityName, setActivityName] = useState('Drumming Lesson');\r\n  const [date, setActivityDate] = useState('');\r\n  const [startTime, setActivityStart] = useState('');\r\n  const [endTime, setActivityEnd] = useState('');\r\n  const [guests, setActivityGuests] = useState(1);\r\n  \r\n  let history = useHistory();\r\n\r\n  //id property to increment every time a new activity is added\r\n  let id = props.len;\r\n  \r\n  //Set minimum time to prevent scheduling the end time to be before the start time\r\n  let minTime;\r\n  if (startTime !== null) {\r\n    minTime = startTime;\r\n  }\r\n  \r\n  //Set a minimum date so users cannot schedule for a day already passed\r\n  let today = new Date();\r\n  let dd = String(today.getDate()).padStart(2, '0');\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  let yyyy = today.getFullYear();\r\n  today = yyyy + '-' + mm + '-' + dd;\r\n  let minDate = today;\r\n  \r\n  //handle for submission and redirect to home page\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newActivity = {activityName, date, startTime, endTime, guests, id};\r\n    props.addActivity(newActivity);\r\n    history.push('/');\r\n  }\r\n\r\n  return ( \r\n    <div className=\"book\">\r\n      <h2>Book A New Activity</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"activities\">Choose an activity:</label>\r\n        <select className=\"inputs\" value={activityName} onChange={(e)=> setActivityName(e.target.value)}>\r\n          <option value=\"Drum Lesson\">Drum Lesson</option>\r\n          <option value=\"Valorant Lesson\">Valorant Lesson</option>\r\n        </select>\r\n        <label>Date:</label>\r\n        <input\r\n          className=\"inputs\" \r\n          type=\"date\"\r\n          min={minDate}\r\n          placeholder=\"yyyy-mm-dd\"\r\n          value={date}\r\n          onChange={(e) => setActivityDate(e.target.value)}\r\n          required\r\n        />\r\n        <label>Start Time:</label>\r\n        <input\r\n          className=\"inputs\" \r\n          type=\"time\"\r\n          value={startTime}\r\n          onChange={(e) => setActivityStart(e.target.value)}\r\n          required \r\n        />\r\n        <label>End Time:</label>\r\n        <input\r\n          className=\"inputs\" \r\n          type=\"time\"\r\n          min={minTime}\r\n          max=\"23:59\"\r\n          value={endTime}\r\n          onChange={(e) => setActivityEnd(e.target.value)} \r\n          required\r\n        />\r\n        <label>Guests:</label>\r\n        <input \r\n          className=\"inputs\"\r\n          type=\"number\"\r\n          min = \"1\"\r\n          max = \"3\"\r\n          value={guests}\r\n          onChange={(e) => setActivityGuests(e.target.value)} \r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"hidden\"\r\n          defaultValue={id}\r\n        />\r\n        <button>Book Now</button>\r\n      </form>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Book;","import { useState, useEffect } from \"react\";\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Book from './Book';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  //state of list of activities booked\n  const [activities, setActivities] = useState([]);\n\n  //Sort to have nearest activity at the top\n  const sortByDate = (activities) => {\n    let sortedActivities = activities.sort((a1, a2) => (a1.date > a2.date) ? 1 : (a1.date < a2.date) ? -1 : 0);\n    setActivities([...sortedActivities]);\n    console.log(sortedActivities);\n  }\n\n  //Add new activity to state\n  const addActivity = (newActivity) => {\n    setActivities([...activities, newActivity])\n  }\n\n  //intialized variable to pass to give new activities an id\n  let len = activities.length;\n\n  //keep track of when the activities state is changed\n  useEffect(() => {\n  }, [activities]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home activities={activities} len={len} sortByDate={sortByDate}/>\n            </Route>\n            <Route path=\"/book\">\n              <Book activities={activities} addActivity={addActivity} len={len}/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}